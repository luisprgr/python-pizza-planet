name: Pizza Planet CI

on:
  pull_request:
    branches:
      - main

concurrency: 
  group: CI-Pizza-Planet-${{github.ref}}
  cancel-in-progress: true

jobs:
  Install-dependencies:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout to my branch
        uses: actions/checkout@v3

      - name: Creating or Restoring venv cache
        id: venv-cache
        uses: actions/cache@v3
        with:
          path : venv
          key: CI-Pizza-Planet-Ubuntu-22.04-${{hashFiles('requirements.txt')}}
      
      - name: Creating virtual environment 
        if: steps.venv-cache.outputs.cache-hit != true
        run: python -m venv venv

      - name: Install python dependencies
        if: steps.venv-cache.outputs.cache-hit != true
        run: source venv/bin/activate && pip install -r requirements.txt

  Linters:
    runs-on: ubuntu-22.04
    needs: [install-dependencies]
    steps:
      - name: Checkout to my branch
        uses: actions/checkout@v3

      - name: Restoring venv cache
        id: venv-cache
        uses: actions/cache@v3
        with:
          path : venv
          key: CI-Pizza-Planet-Ubuntu-22.04-${{hashFiles('requirements.txt')}}
      
      - name: Run linters
        run: source venv/bin/activate && flake8 app/ manage.py

  Test:
    runs-on: ubuntu-22.04
    needs: [install-dependencies]
    steps:
      - name: Checkout to my branch
        uses: actions/checkout@v3

      - name: Restoring venv cache
        id: venv-cache
        uses: actions/cache@v3
        with:
          path : venv
          key: CI-Pizza-Planet-Ubuntu-22.04-${{hashFiles('requirements.txt')}}
      
      - name: Run tests
        run: source venv/bin/activate && pytest -v app/test/

  Test-coverage-report:
    runs-on: ubuntu-22.04
    needs: [Linters, Test]
    steps:
      - name: Checkout to my branch
        uses: actions/checkout@v3

      - name: Restoring venv cache
        id: venv-cache
        uses: actions/cache@v3
        with:
          path : venv
          key: CI-Pizza-Planet-Ubuntu-22.04-${{hashFiles('requirements.txt')}}
      
      - name: Generate coverage report
        run: source venv/bin/activate && pytest --cov-config=.coveragerc --cov=app app/test/

      - name: Create coverage comment
        uses: ewjoachim/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          MINIMUM_GREEN: 90
          
  CodeQL-Analysis:
    runs-on: ubuntu-22.04
    needs: [Linters, Test]
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout to my branch
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: "python"
    
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
